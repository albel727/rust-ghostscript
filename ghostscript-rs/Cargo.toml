[package]
name = "ghostscript"
description = "High-level API wrapper for Ghostscript PostScript interpreter library"
version = "0.1.0"
authors = ["Alex Belykh <albel727@ngs.ru>"]
license = "AGPL-3.0-or-later"
keywords = ["ghostscript", "postscript", "pdf"]
categories = ["api-bindings", "rendering::data-formats"]
repository = "https://github.com/albel727/rust-ghostscript"
readme = "README.md"
include = ["src/**/*", "Cargo.toml", "*.md", "LICENSE*.txt"]

[features]
# Ghostscript library is usually compiled with GS_THREADSAFE disabled.
# The consequence is that attempts to create another GS instance before
# destroying the first one fail with fatal error.
# If you or a library you use tries to create GS instances from
# multiple threads, you might find feature "synchronized" useful.

# Guard ghostscript instance with mutex lock.
# build() call will block until the previous instance is dropped.
synchronized = ["lazy_static"]

[dependencies]
bitflags = "1.0.1"
ghostscript-sys = { path = "../ghostscript-sys", version = "0.1.0" }
log = { version = "0.4", features = ["max_level_trace", "release_max_level_warn"] }
stable_deref_trait = "1.0"
boolinator = "2.4"

lazy_static = { version = "1.0", optional = true }

[dev-dependencies]
#dbg = "*"
env_logger = "*"
image = "*"
clap = "2.29"
